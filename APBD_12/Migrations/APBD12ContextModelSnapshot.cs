// <auto-generated />
using System;
using APBD_12.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APBD_12.Migrations
{
    [DbContext(typeof(APBD12Context))]
    partial class APBD12ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APBD_12.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdClient")
                        .HasName("Client_pk");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Email = "john.smith@example.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Pesel = "90010112345",
                            Telephone = "123456789"
                        },
                        new
                        {
                            IdClient = 2,
                            Email = "jake.doe@example.com",
                            FirstName = "Jake",
                            LastName = "Doe",
                            Pesel = "92020254321",
                            Telephone = "987654321"
                        },
                        new
                        {
                            IdClient = 10,
                            Email = "delete@example.com",
                            FirstName = "Delete",
                            LastName = "test",
                            Pesel = "29020254321",
                            Telephone = "897654321"
                        });
                });

            modelBuilder.Entity("APBD_12.Models.ClientTrip", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime");

                    b.HasKey("IdClient", "IdTrip")
                        .HasName("Client_Trip_pk");

                    b.HasIndex("IdTrip");

                    b.ToTable("Client_Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            IdTrip = 1,
                            RegisteredAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClient = 2,
                            IdTrip = 1,
                            RegisteredAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("APBD_12.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdCountry")
                        .HasName("Country_pk");

                    b.ToTable("Country", (string)null);

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            Name = "Poland"
                        },
                        new
                        {
                            IdCountry = 2,
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("APBD_12.Models.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdTrip")
                        .HasName("Trip_pk");

                    b.ToTable("Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdTrip = 1,
                            DateFrom = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum...",
                            MaxPeople = 20,
                            Name = "ABC"
                        });
                });

            modelBuilder.Entity("Country_Trip", b =>
                {
                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.HasKey("IdCountry", "IdTrip")
                        .HasName("Country_Trip_pk");

                    b.HasIndex("IdTrip");

                    b.ToTable("Country_Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            IdTrip = 1
                        },
                        new
                        {
                            IdCountry = 2,
                            IdTrip = 1
                        });
                });

            modelBuilder.Entity("APBD_12.Models.ClientTrip", b =>
                {
                    b.HasOne("APBD_12.Models.Client", "IdClientNavigation")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("Table_5_Client");

                    b.HasOne("APBD_12.Models.Trip", "IdTripNavigation")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdTrip")
                        .IsRequired()
                        .HasConstraintName("Table_5_Trip");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdTripNavigation");
                });

            modelBuilder.Entity("Country_Trip", b =>
                {
                    b.HasOne("APBD_12.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("IdCountry")
                        .IsRequired()
                        .HasConstraintName("Country_Trip_Country");

                    b.HasOne("APBD_12.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("IdTrip")
                        .IsRequired()
                        .HasConstraintName("Country_Trip_Trip");
                });

            modelBuilder.Entity("APBD_12.Models.Client", b =>
                {
                    b.Navigation("ClientTrips");
                });

            modelBuilder.Entity("APBD_12.Models.Trip", b =>
                {
                    b.Navigation("ClientTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
